'use strict'

const assert = require('assert')
const path = require('path')
const ancestors = require('../')

const _0_1 = ancestors(module)
const _1_1 = require('./_1_1')
const _2_1 = require('./_2_1')
const _2_2 = require('./_2_2')
const _3_1 = require('./_3_1')
const _3_2 = require('./_3_2')
const _3_3 = require('./_3_3')
const _recursive = require('./_recursive')

assert.equal(_0_1.length, 0)
assert.equal(_1_1.length, 1)
assert.equal(_2_1.length, 2)
assert.equal(_2_2.length, 2)
assert.equal(_3_1.length, 3)
assert.equal(_3_2.length, 3)
assert.equal(_3_3.length, 3)
assert.equal(_recursive.ancestors.length, 1)
assert.equal(_recursive.recursive.ancestors.length, 1)

assert.deepEqual(_0_1, [])
assert.deepEqual(_1_1, [__filename])
assert.deepEqual(_2_1, [path.join(__dirname, '_2_1.js'), __filename])
assert.deepEqual(_2_2, [path.join(__dirname, '_2_1.js'), __filename])
assert.deepEqual(_3_1, [path.join(__dirname, '_3_2.js'), path.join(__dirname, '_3_1.js'), __filename])
assert.deepEqual(_3_2, [path.join(__dirname, '_3_2.js'), path.join(__dirname, '_3_1.js'), __filename])
assert.deepEqual(_3_3, [path.join(__dirname, '_3_2.js'), path.join(__dirname, '_3_1.js'), __filename])
assert.deepEqual(_recursive.ancestors, [__filename])
assert.deepEqual(_recursive.recursive.ancestors, [__filename])
